/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EtherspotPaymaster,
  EtherspotPaymasterInterface,
} from "../../../src/TEST_EtherspotPaymaster.sol/EtherspotPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "WhitelistInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sigTimeRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b2838038062002b288339818101604052810190620000379190620002c9565b80620000586200004c6200007160201b60201c565b6200007960201b60201c565b62000069816200013d60201b60201c565b50506200037e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014d6200019160201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620001a16200007160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001c76200022260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000217906200035c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027d8262000250565b9050919050565b6000620002918262000270565b9050919050565b620002a38162000284565b8114620002af57600080fd5b50565b600081519050620002c38162000298565b92915050565b600060208284031215620002e257620002e16200024b565b5b6000620002f284828501620002b2565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062000344602083620002fb565b915062000351826200030c565b602082019050919050565b60006020820190508181036000830152620003778162000335565b9050919050565b61279a806200038e6000396000f3fe60806040526004361061011f5760003560e01c8063b092145e116100a0578063c266f29211610064578063c266f29214610386578063c399ec88146103c3578063d0e30db0146103ee578063f2fde38b146103f8578063f465c77e146104215761011f565b8063b092145e146102a1578063b0d691fe146102de578063b3154db014610309578063bb9fe6bf14610346578063c23a5cea1461035d5761011f565b8063584465f2116100e7578063584465f2146101e45780636b845bfe1461020d578063715018a6146102365780638da5cb5b1461024d578063a9a23409146102785761011f565b80630396cb60146101245780630a3b0a4f14610140578063205c28781461016957806324efa2641461019257806329092d0e146101bb575b600080fd5b61013e60048036038101906101399190611634565b61045f565b005b34801561014c57600080fd5b50610167600480360381019061016291906116bf565b6104f8565b005b34801561017557600080fd5b50610190600480360381019061018b9190611760565b610504565b005b34801561019e57600080fd5b506101b960048036038101906101b49190611805565b61059f565b005b3480156101c757600080fd5b506101e260048036038101906101dd91906116bf565b610608565b005b3480156101f057600080fd5b5061020b60048036038101906102069190611890565b610614565b005b34801561021957600080fd5b50610234600480360381019061022f9190611805565b610660565b005b34801561024257600080fd5b5061024b6106c9565b005b34801561025957600080fd5b506102626106dd565b60405161026f91906118cc565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a9190611962565b610706565b005b3480156102ad57600080fd5b506102c860048036038101906102c391906119d6565b610720565b6040516102d59190611a31565b60405180910390f35b3480156102ea57600080fd5b506102f361074f565b6040516103009190611aab565b60405180910390f35b34801561031557600080fd5b50610330600480360381019061032b91906119d6565b610775565b60405161033d9190611a31565b60405180910390f35b34801561035257600080fd5b5061035b610789565b005b34801561036957600080fd5b50610384600480360381019061037f9190611ac6565b610815565b005b34801561039257600080fd5b506103ad60048036038101906103a89190611b18565b6108ad565b6040516103ba9190611b7a565b60405180910390f35b3480156103cf57600080fd5b506103d8610958565b6040516103e59190611ba4565b60405180910390f35b6103f66109fb565b005b34801561040457600080fd5b5061041f600480360381019061041a91906116bf565b610a8b565b005b34801561042d57600080fd5b5061044860048036038101906104439190611beb565b610b0f565b604051610456929190611cf3565b60405180910390f35b610467610c70565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016104c39190611d32565b6000604051808303818588803b1580156104dc57600080fd5b505af11580156104f0573d6000803e3d6000fd5b505050505050565b61050181610cee565b50565b61050c610c70565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610569929190611d5c565b600060405180830381600087803b15801561058357600080fd5b505af1158015610597573d6000803e3d6000fd5b505050505050565b6105a98282610e9a565b81816040516105b9929190611e42565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1360405160405180910390a35050565b61061181610eee565b50565b61061c610c70565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61066a8282611099565b818160405161067a929190611e42565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f360405160405180910390a35050565b6106d1610c70565b6106db60006110ed565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61070e6111b1565b61071a8484848461120d565b50505050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006107818383611248565b905092915050565b610791610c70565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b50505050565b61081d610c70565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016108789190611e5b565b600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b5050505050565b60006108b8826112dc565b82602001358380604001906108cd9190611e85565b6040516108db929190611f27565b60405180910390208480606001906108f39190611e85565b604051610901929190611f27565b604051809103902085608001358660a001358760c001358860e0013589610100013560405160200161093b99989796959493929190611f40565b604051602081830303815290604052805190602001209050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b591906118cc565b602060405180830381865afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f69190611fe2565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610a5791906118cc565b6000604051808303818588803b158015610a7057600080fd5b505af1158015610a84573d6000803e3d6000fd5b5050505050565b610a93610c70565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa90612092565b60405180910390fd5b610b0c816110ed565b50565b6060600080610b1d866108ad565b905036600087806101200190610b339190611e85565b915091506000601483839050610b4991906120e1565b90506040811480610b5a5750604181145b610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090612187565b60405180910390fd5b6000610ba48a6112dc565b90506000610c1885856014908092610bbe939291906121b1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c0a886112ec565b61131c90919063ffffffff16565b9050610c248183611248565b610c4a576001604051806020016040528060008152509097509750505050505050610c68565b60006040518060200160405280600081525090975097505050505050505b935093915050565b610c78611343565b73ffffffffffffffffffffffffffffffffffffffff16610c966106dd565b73ffffffffffffffffffffffffffffffffffffffff1614610cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce390612238565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d55906122a4565b60405180910390fd5b610d683382611248565b15610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f90612336565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0060405160405180910390a350565b60005b82829050811015610ee957610ed8838383818110610ebe57610ebd612356565b5b9050602002016020810190610ed391906116bf565b610cee565b80610ee290612385565b9050610e9d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f55906122a4565b60405180910390fd5b610f683382611248565b610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e90612440565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8860405160405180910390a350565b60005b828290508110156110e8576110d78383838181106110bd576110bc612356565b5b90506020020160208101906110d291906116bf565b610eee565b806110e190612385565b905061109c565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461120b57600080fd5b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f906124ac565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000808235905080915050919050565b6000816040516020016112ff9190612544565b604051602081830303815290604052805190602001209050919050565b600080600061132b858561134b565b915091506113388161139d565b819250505092915050565b600033905090565b60008060418351141561138d5760008060006020860151925060408601519150606086015160001a90506113818782858561150b565b94509450505050611396565b60006002915091505b9250929050565b600060048111156113b1576113b061256a565b5b8160048111156113c4576113c361256a565b5b14156113cf57611508565b600160048111156113e3576113e261256a565b5b8160048111156113f6576113f561256a565b5b1415611437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142e906125e5565b60405180910390fd5b6002600481111561144b5761144a61256a565b5b81600481111561145e5761145d61256a565b5b141561149f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149690612651565b60405180910390fd5b600360048111156114b3576114b261256a565b5b8160048111156114c6576114c561256a565b5b1415611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe906126e3565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156115465760006003915091506115e5565b60006001878787876040516000815260200160405260405161156b949392919061271f565b6020604051602081039080840390855afa15801561158d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115dc576000600192509250506115e5565b80600092509250505b94509492505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b611611816115f8565b811461161c57600080fd5b50565b60008135905061162e81611608565b92915050565b60006020828403121561164a576116496115ee565b5b60006116588482850161161f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061168c82611661565b9050919050565b61169c81611681565b81146116a757600080fd5b50565b6000813590506116b981611693565b92915050565b6000602082840312156116d5576116d46115ee565b5b60006116e3848285016116aa565b91505092915050565b60006116f782611661565b9050919050565b611707816116ec565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b6000819050919050565b61173d8161172a565b811461174857600080fd5b50565b60008135905061175a81611734565b92915050565b60008060408385031215611777576117766115ee565b5b600061178585828601611715565b92505060206117968582860161174b565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126117c5576117c46117a0565b5b8235905067ffffffffffffffff8111156117e2576117e16117a5565b5b6020830191508360208202830111156117fe576117fd6117aa565b5b9250929050565b6000806020838503121561181c5761181b6115ee565b5b600083013567ffffffffffffffff81111561183a576118396115f3565b5b611846858286016117af565b92509250509250929050565b600061185d82611681565b9050919050565b61186d81611852565b811461187857600080fd5b50565b60008135905061188a81611864565b92915050565b6000602082840312156118a6576118a56115ee565b5b60006118b48482850161187b565b91505092915050565b6118c681611681565b82525050565b60006020820190506118e160008301846118bd565b92915050565b600381106118f457600080fd5b50565b600081359050611906816118e7565b92915050565b60008083601f840112611922576119216117a0565b5b8235905067ffffffffffffffff81111561193f5761193e6117a5565b5b60208301915083600182028301111561195b5761195a6117aa565b5b9250929050565b6000806000806060858703121561197c5761197b6115ee565b5b600061198a878288016118f7565b945050602085013567ffffffffffffffff8111156119ab576119aa6115f3565b5b6119b78782880161190c565b935093505060406119ca8782880161174b565b91505092959194509250565b600080604083850312156119ed576119ec6115ee565b5b60006119fb858286016116aa565b9250506020611a0c858286016116aa565b9150509250929050565b60008115159050919050565b611a2b81611a16565b82525050565b6000602082019050611a466000830184611a22565b92915050565b6000819050919050565b6000611a71611a6c611a6784611661565b611a4c565b611661565b9050919050565b6000611a8382611a56565b9050919050565b6000611a9582611a78565b9050919050565b611aa581611a8a565b82525050565b6000602082019050611ac06000830184611a9c565b92915050565b600060208284031215611adc57611adb6115ee565b5b6000611aea84828501611715565b91505092915050565b600080fd5b60006101608284031215611b0f57611b0e611af3565b5b81905092915050565b600060208284031215611b2e57611b2d6115ee565b5b600082013567ffffffffffffffff811115611b4c57611b4b6115f3565b5b611b5884828501611af8565b91505092915050565b6000819050919050565b611b7481611b61565b82525050565b6000602082019050611b8f6000830184611b6b565b92915050565b611b9e8161172a565b82525050565b6000602082019050611bb96000830184611b95565b92915050565b611bc881611b61565b8114611bd357600080fd5b50565b600081359050611be581611bbf565b92915050565b600080600060608486031215611c0457611c036115ee565b5b600084013567ffffffffffffffff811115611c2257611c216115f3565b5b611c2e86828701611af8565b9350506020611c3f86828701611bd6565b9250506040611c508682870161174b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c94578082015181840152602081019050611c79565b83811115611ca3576000848401525b50505050565b6000601f19601f8301169050919050565b6000611cc582611c5a565b611ccf8185611c65565b9350611cdf818560208601611c76565b611ce881611ca9565b840191505092915050565b60006040820190508181036000830152611d0d8185611cba565b9050611d1c6020830184611b95565b9392505050565b611d2c816115f8565b82525050565b6000602082019050611d476000830184611d23565b92915050565b611d56816116ec565b82525050565b6000604082019050611d716000830185611d4d565b611d7e6020830184611b95565b9392505050565b600081905092915050565b6000819050919050565b611da381611681565b82525050565b6000611db58383611d9a565b60208301905092915050565b6000611dd060208401846116aa565b905092915050565b6000602082019050919050565b6000611df18385611d85565b9350611dfc82611d90565b8060005b85811015611e3557611e128284611dc1565b611e1c8882611da9565b9750611e2783611dd8565b925050600181019050611e00565b5085925050509392505050565b6000611e4f828486611de5565b91508190509392505050565b6000602082019050611e706000830184611d4d565b92915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611ea257611ea1611e76565b5b80840192508235915067ffffffffffffffff821115611ec457611ec3611e7b565b5b602083019250600182023603831315611ee057611edf611e80565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000611f0e8385611ee8565b9350611f1b838584611ef3565b82840190509392505050565b6000611f34828486611f02565b91508190509392505050565b600061012082019050611f56600083018c6118bd565b611f63602083018b611b95565b611f70604083018a611b6b565b611f7d6060830189611b6b565b611f8a6080830188611b95565b611f9760a0830187611b95565b611fa460c0830186611b95565b611fb160e0830185611b95565b611fbf610100830184611b95565b9a9950505050505050505050565b600081519050611fdc81611734565b92915050565b600060208284031215611ff857611ff76115ee565b5b600061200684828501611fcd565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061207c60268361200f565b915061208782612020565b604082019050919050565b600060208201905081810360008301526120ab8161206f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120ec8261172a565b91506120f78361172a565b92508282101561210a576121096120b2565b5b828203905092915050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b600061217160408361200f565b915061217c82612115565b604082019050919050565b600060208201905081810360008301526121a081612164565b9050919050565b600080fd5b600080fd5b600080858511156121c5576121c46121a7565b5b838611156121d6576121d56121ac565b5b6001850283019150848603905094509492505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061222260208361200f565b915061222d826121ec565b602082019050919050565b6000602082019050818103600083015261225181612215565b9050919050565b7f57686974656c6973743a3a205a65726f20616464726573730000000000000000600082015250565b600061228e60188361200f565b915061229982612258565b602082019050919050565b600060208201905081810360008301526122bd81612281565b9050919050565b7f57686974656c6973743a3a204163636f756e7420697320616c7265616479207760008201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b6000612320602a8361200f565b915061232b826122c4565b604082019050919050565b6000602082019050818103600083015261234f81612313565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006123908261172a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123c3576123c26120b2565b5b600182019050919050565b7f57686974656c6973743a3a204163636f756e74206973206e6f7420776869746560008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b600061242a60268361200f565b9150612435826123ce565b604082019050919050565b600060208201905081810360008301526124598161241d565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000612496600d8361200f565b91506124a182612460565b602082019050919050565b600060208201905081810360008301526124c581612489565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b600061250d601c836124cc565b9150612518826124d7565b601c82019050919050565b6000819050919050565b61253e61253982611b61565b612523565b82525050565b600061254f82612500565b915061255b828461252d565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006125cf60188361200f565b91506125da82612599565b602082019050919050565b600060208201905081810360008301526125fe816125c2565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061263b601f8361200f565b915061264682612605565b602082019050919050565b6000602082019050818103600083015261266a8161262e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006126cd60228361200f565b91506126d882612671565b604082019050919050565b600060208201905081810360008301526126fc816126c0565b9050919050565b600060ff82169050919050565b61271981612703565b82525050565b60006080820190506127346000830187611b6b565b6127416020830186612710565b61274e6040830185611b6b565b61275b6060830184611b6b565b9594505050505056fea26469706673582212205ad0035b0a783fa002c6bbf89ca8e281deda3a39ebfcfa1a71c19502dc30bf4064736f6c634300080c0033";

type EtherspotPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherspotPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherspotPaymaster__factory extends ContractFactory {
  constructor(...args: EtherspotPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EtherspotPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<EtherspotPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): EtherspotPaymaster {
    return super.attach(address) as EtherspotPaymaster;
  }
  override connect(signer: Signer): EtherspotPaymaster__factory {
    return super.connect(signer) as EtherspotPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherspotPaymasterInterface {
    return new utils.Interface(_abi) as EtherspotPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherspotPaymaster {
    return new Contract(address, _abi, signerOrProvider) as EtherspotPaymaster;
  }
}
