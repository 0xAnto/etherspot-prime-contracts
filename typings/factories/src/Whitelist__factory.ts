/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Whitelist, WhitelistInterface } from "../../src/Whitelist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "WhitelistInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61141c8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101085780638da5cb5b14610112578063b092145e14610130578063b3154db014610160578063f2fde38b1461019057610093565b80630a3b0a4f1461009857806324efa264146100b457806329092d0e146100d05780636b845bfe146100ec575b600080fd5b6100b260048036038101906100ad9190610e41565b6101ac565b005b6100ce60048036038101906100c99190610ed3565b6101f4565b005b6100ea60048036038101906100e59190610e41565b6102c1565b005b61010660048036038101906101019190610ed3565b610309565b005b6101106103d6565b005b61011a6103ea565b6040516101279190610f2f565b60405180910390f35b61014a60048036038101906101459190610f4a565b610413565b6040516101579190610fa5565b60405180910390f35b61017a60048036038101906101759190610f4a565b610442565b6040516101879190610fa5565b60405180910390f35b6101aa60048036038101906101a59190610e41565b610492565b005b6101c067d57585be8e56847760c01b610516565b6101d467acbca5a5f6964c6f60c01b610516565b6101e867d05bd605adb9437560c01b610516565b6101f181610519565b50565b61020867d7507995e3c7463f60c01b610516565b61021c67e533669f807a6eaf60c01b610516565b610230671902aa892f3211fe60c01b610516565b61023a82826107b4565b61024e6779f65ba61c00541160c01b610516565b610262672d4a6b9b541647b760c01b610516565b818160405161027292919061107d565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1360405160405180910390a35050565b6102d56734fedf354102226760c01b610516565b6102e967652b5a2e4bbe170960c01b610516565b6102fd6735ad2ea433cbbb9860c01b610516565b6103068161086c565b50565b61031d678bb69f7437b29fe860c01b610516565b61033167ff4e847d06a204e160c01b610516565b61034567885e4b5948deffcc60c01b610516565b61034f8282610b07565b61036367d3c41d6ac1d01dce60c01b610516565b61037767b658ee9ac8cbc25560c01b610516565b818160405161038792919061107d565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f360405160405180910390a35050565b6103de610bbf565b6103e86000610c3d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006104586765fe99429942163f60c01b610516565b61046c67533fd0e9a61ac95460c01b610516565b61048067630e274b54306f1660c01b610516565b61048a8383610d01565b905092915050565b61049a610bbf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611119565b60405180910390fd5b61051381610c3d565b50565b50565b61052d67ec73335e8523eb5060c01b610516565b61054167e0bdfa685677f99e60c01b610516565b61055567e0e21cfd0d1ceff560c01b610516565b610569679acaf88afcec3ad160c01b610516565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611185565b60405180910390fd5b6105ed67d8bf21566e287fbd60c01b610516565b61060167e8567745fba6491160c01b610516565b6106156757ccd5ef4d3a9dec60c01b610516565b610629671da80704dbf59e7860c01b610516565b6106333382610d01565b15610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90611217565b60405180910390fd5b61068767e7b34b4de3a4041d60c01b610516565b61069b67975f080dece8246460c01b610516565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061074367b5abd754b03b43f660c01b610516565b61075767181d5867ee95b19260c01b610516565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0060405160405180910390a350565b6107c867043c0706fc376bfd60c01b610516565b6107dc6756c68c2f54e1f0b760c01b610516565b6107f0672d88592da3af2c5760c01b610516565b60005b8282905081101561086757610812677c67e5dc4e9db62e60c01b610516565b6108266724cc1bc8c9b1480b60c01b610516565b61085683838381811061083c5761083b611237565b5b90506020020160208101906108519190610e41565b610519565b806108609061129f565b90506107f3565b505050565b610880672c075657086e377e60c01b610516565b6108946729a2dac70a1d73d360c01b610516565b6108a86752ce261855c7f82460c01b610516565b6108bc67b361f078673d867a60c01b610516565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611185565b60405180910390fd5b61094067bdad28e208ef01cb60c01b610516565b61095467c2ed7c5f130df43460c01b610516565b6109686720fadd76752f2f4060c01b610516565b61097c67380690fb69c349ae60c01b610516565b6109863382610d01565b6109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc9061135a565b60405180910390fd5b6109d967a4fb65195877f39560c01b610516565b6109ed67d0128a6605a110a560c01b610516565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a966718610b49def5ec0260c01b610516565b610aaa6763a68dcf58a593aa60c01b610516565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8860405160405180910390a350565b610b1b67480832a0e4693adc60c01b610516565b610b2f67ad8b049cc3d4afff60c01b610516565b610b4367d3355eb94768d29560c01b610516565b60005b82829050811015610bba57610b6567b562513b13f9705d60c01b610516565b610b7967be9c6b163a645c6160c01b610516565b610ba9838383818110610b8f57610b8e611237565b5b9050602002016020810190610ba49190610e41565b61086c565b80610bb39061129f565b9050610b46565b505050565b610bc7610dd1565b73ffffffffffffffffffffffffffffffffffffffff16610be56103ea565b73ffffffffffffffffffffffffffffffffffffffff1614610c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c32906113c6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d176739ada155cf06417b60c01b610516565b610d2b672598d9a3e2dbf0a160c01b610516565b610d3f67ebb9184c946445bc60c01b610516565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0e82610de3565b9050919050565b610e1e81610e03565b8114610e2957600080fd5b50565b600081359050610e3b81610e15565b92915050565b600060208284031215610e5757610e56610dd9565b5b6000610e6584828501610e2c565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e9357610e92610e6e565b5b8235905067ffffffffffffffff811115610eb057610eaf610e73565b5b602083019150836020820283011115610ecc57610ecb610e78565b5b9250929050565b60008060208385031215610eea57610ee9610dd9565b5b600083013567ffffffffffffffff811115610f0857610f07610dde565b5b610f1485828601610e7d565b92509250509250929050565b610f2981610e03565b82525050565b6000602082019050610f446000830184610f20565b92915050565b60008060408385031215610f6157610f60610dd9565b5b6000610f6f85828601610e2c565b9250506020610f8085828601610e2c565b9150509250929050565b60008115159050919050565b610f9f81610f8a565b82525050565b6000602082019050610fba6000830184610f96565b92915050565b600081905092915050565b6000819050919050565b610fde81610e03565b82525050565b6000610ff08383610fd5565b60208301905092915050565b600061100b6020840184610e2c565b905092915050565b6000602082019050919050565b600061102c8385610fc0565b935061103782610fcb565b8060005b858110156110705761104d8284610ffc565b6110578882610fe4565b975061106283611013565b92505060018101905061103b565b5085925050509392505050565b600061108a828486611020565b91508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611103602683611096565b915061110e826110a7565b604082019050919050565b60006020820190508181036000830152611132816110f6565b9050919050565b7f57686974656c6973743a3a205a65726f20616464726573730000000000000000600082015250565b600061116f601883611096565b915061117a82611139565b602082019050919050565b6000602082019050818103600083015261119e81611162565b9050919050565b7f57686974656c6973743a3a204163636f756e7420697320616c7265616479207760008201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b6000611201602a83611096565b915061120c826111a5565b604082019050919050565b60006020820190508181036000830152611230816111f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006112aa82611295565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112dd576112dc611266565b5b600182019050919050565b7f57686974656c6973743a3a204163636f756e74206973206e6f7420776869746560008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000611344602683611096565b915061134f826112e8565b604082019050919050565b6000602082019050818103600083015261137381611337565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113b0602083611096565b91506113bb8261137a565b602082019050919050565b600060208201905081810360008301526113df816113a3565b905091905056fea26469706673582212203394bcad9454e235bfbe16ba8ac6baab3feedea4814b52ddfa191d5eb7ab403664736f6c634300080c0033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
