/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniversalSigValidator,
  UniversalSigValidatorInterface,
} from "../../../../src/helpers/UniversalSignatureValidator.sol/UniversalSigValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ERC1271Revert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ERC6492DeployFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "allowSideEffects",
        type: "bool",
      },
    ],
    name: "isValidSigImpl",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSigWithSideEffects",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506117d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806316d43401146100465780638f0684301461007657806398ef1ed8146100a6575b600080fd5b610060600480360381019061005b9190610ef8565b6100d6565b60405161006d9190610f8f565b60405180910390f35b610090600480360381019061008b9190610faa565b610aaf565b60405161009d9190610f8f565b60405180910390f35b6100c060048036038101906100bb9190610faa565b610b7c565b6040516100cd9190610f8f565b60405180910390f35b60006100ec67a3cfd74b577d7d0b60c01b610da5565b610100679d796d66ff482d9260c01b610da5565b61011467b5ad5babe9b9ef5660c01b610da5565b60008673ffffffffffffffffffffffffffffffffffffffff163b90506101446704d44bdf60e5d27360c01b610da5565b61015867bf839d8ee120541360c01b610da5565b606061016e673adbedd92b46adfd60c01b610da5565b6101826752530720742342c860c01b610da5565b60007f649264926492649264926492649264926492649264926492649264926492649260001b878760208a8a90506101ba9190611057565b908a8a9050926101cc93929190611095565b906101d791906110e8565b1490506101ee670b1b53c671def4bb60c01b610da5565b61020267c9492e13dc2aeffa60c01b610da5565b801561044f5761021c67bb568e8c181e7cc260c01b610da5565b610230678a4cdc4a8ab124fb60c01b610da5565b61024467329ea7cd01c6c6b760c01b610da5565b600061025a67b1deb5069a2f2a9b60c01b610da5565b61026e67224c183f43605f0160c01b610da5565b606061028467d1e3e221f5789afb60c01b610da5565b888860009060208c8c90506102999190611057565b926102a693929190611095565b8101906102b391906112c6565b8096508193508294505050506102d3677cdc99b13a6b674860c01b610da5565b6102e7676a0e1cdb561e694d60c01b610da5565b60008503610433576103036733e720c7a95e5e8d60c01b610da5565b61031767ecb1fc420487dc3960c01b610da5565b61032b67cfe71eafc0e9e12e60c01b610da5565b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161035391906113c2565b6000604051808303816000865af19150503d8060008114610390576040519150601f19603f3d011682016040523d82523d6000602084013e610395565b606091505b50915091506103ae676b59a4b8327ec73160c01b610da5565b6103c267462f85cec52d5d6e60c01b610da5565b81610418576103db6784039bea9912bdb860c01b610da5565b806040517f9d0d6e2d00000000000000000000000000000000000000000000000000000000815260040161040f9190611423565b60405180910390fd5b61042c679a620785d736574160c01b610da5565b5050610448565b61044767851a471bf72f986a60c01b610da5565b5b50506104bf565b61046367f6e38b9e0c68847d60c01b610da5565b61047767bffca06f1dd03dfe60c01b610da5565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091505b6104d36795425990ecf064a660c01b610da5565b6104e767586dadd8d3bb3edd60c01b610da5565b808015610504575061050367f25ebb1974401bbf60c01b610da8565b5b8061052b575060008311801561052a57506105296755fa2e85cc6b59fe60c01b610da8565b5b5b1561079b5761054467215b7b7d2f2792a860c01b610da5565b6105586798184ecfef1027f060c01b610da5565b61056c67be0df1a9ed8f9e2860c01b610da5565b8873ffffffffffffffffffffffffffffffffffffffff16631626ba7e89846040518363ffffffff1660e01b81526004016105a7929190611454565b602060405180830381865afa9250505080156105e157506040513d601f19601f820116820180604052508101906105de91906114dc565b60015b610668573d8060008114610611576040519150601f19603f3d011682016040523d82523d6000602084013e610616565b606091505b5061062b67f5ae858b06b0490e60c01b610da5565b806040517f6f2a959900000000000000000000000000000000000000000000000000000000815260040161065f9190611423565b60405180910390fd5b61067c672989dc5d15f9aafd60c01b610da5565b61069067424eb1ad1e8f1cf160c01b610da5565b6000631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161490506106f067dbafa7bd27785e1b60c01b610da5565b610704672d98267223e7399d60c01b610da5565b6000851480156107115750825b801561071b575086155b156107525761073467beec0b919a23827560c01b610da5565b6107486791551b18add51fb160c01b610da5565b806000526001601ffd5b61076667ac0f0ac50749effc60c01b610da5565b61077a675597fdf1e9bcab5460c01b610da5565b61078e67dcec978935df247c60c01b610da5565b8095505050505050610aa6565b6107af670b20502b2b4d280860c01b610da5565b6107c367ab9cba108a67fc8b60c01b610da5565b6107d7676575e619ea1e9b2060c01b610da5565b6107eb67a95b13670122145260c01b610da5565b60418787905014610831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108289061158c565b60405180910390fd5b610845679f9a572261a546d060c01b610da5565b6108596763cb068b5439684960c01b610da5565b61086d67cc9fbf49d6165ed560c01b610da5565b6000878760009060209261088393929190611095565b9061088e91906110e8565b90506108a4673eac52a744c1772960c01b610da5565b6108b86721d7c750e9409efa60c01b610da5565b600088886020906040926108ce93929190611095565b906108d991906110e8565b90506108ef67a7a7c7eed2c5bfee60c01b610da5565b610903676065e95db34b22c260c01b610da5565b600089896040818110610919576109186115ac565b5b9050013560f81c60f81b60f81c905061093c67f441817a0c17160660c01b610da5565b61095067af108f35023fcf8260c01b610da5565b601b8160ff16141580156109685750601c8160ff1614155b156109e45761098167482d9be93bcb293660c01b610da5565b610995678044dcbe2ee1e71160c01b610da5565b6109a967d352fa1a5a5dfb7060c01b610da5565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db9061164d565b60405180910390fd5b6109f867594621813b7ce69c60c01b610da5565b610a0c67fdfded647cbddc8d60c01b610da5565b610a20675e7be6016b87610960c01b610da5565b8b73ffffffffffffffffffffffffffffffffffffffff1660018c83868660405160008152602001604052604051610a5a9493929190611689565b6020604051602081039080840390855afa158015610a7c573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161496505050505050505b95945050505050565b6000610ac5673ad0d0f984aba2ec60c01b610da5565b610ad96702088615ed676d8c60c01b610da5565b610aed679837d68731def7f760c01b610da5565b3073ffffffffffffffffffffffffffffffffffffffff166316d434018686868660016040518663ffffffff1660e01b8152600401610b2f95949392919061170a565b6020604051808303816000875af1158015610b4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b72919061176d565b9050949350505050565b6000610b9267a253f173fe0b83c860c01b610da5565b610ba667aeaeaa5da09e4cd460c01b610da5565b610bba677eabae8e77a931d960c01b610da5565b3073ffffffffffffffffffffffffffffffffffffffff166316d434018686868660006040518663ffffffff1660e01b8152600401610bfc95949392919061170a565b6020604051808303816000875af1925050508015610c3857506040513d601f19601f82011682018060405250810190610c35919061176d565b60015b610d70573d8060008114610c68576040519150601f19603f3d011682016040523d82523d6000602084013e610c6d565b606091505b50610c826702aea2bf85ea46a260c01b610da5565b610c966795f2a8c07c59b46660c01b610da5565b600081519050610cb06782dd102de245318260c01b610da5565b610cc467637123a73f204d5460c01b610da5565b60018103610d4457610ce067ad38af31a050fe7860c01b610da5565b610cf467649c4a9a8be1a72960c01b610da5565b600160f81b82600081518110610d0d57610d0c6115ac565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161492505050610d9d565b610d5867f65e2fc5564df47360c01b610da5565b610d6c67682df07a57c1533060c01b610da5565b8082fd5b610d8467c134631b26c12a6d60c01b610da5565b610d9867b955ef9c3b5aed1360c01b610da5565b809150505b949350505050565b50565b600060019050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610df282610dc7565b9050919050565b610e0281610de7565b8114610e0d57600080fd5b50565b600081359050610e1f81610df9565b92915050565b6000819050919050565b610e3881610e25565b8114610e4357600080fd5b50565b600081359050610e5581610e2f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e8057610e7f610e5b565b5b8235905067ffffffffffffffff811115610e9d57610e9c610e60565b5b602083019150836001820283011115610eb957610eb8610e65565b5b9250929050565b60008115159050919050565b610ed581610ec0565b8114610ee057600080fd5b50565b600081359050610ef281610ecc565b92915050565b600080600080600060808688031215610f1457610f13610dbd565b5b6000610f2288828901610e10565b9550506020610f3388828901610e46565b945050604086013567ffffffffffffffff811115610f5457610f53610dc2565b5b610f6088828901610e6a565b93509350506060610f7388828901610ee3565b9150509295509295909350565b610f8981610ec0565b82525050565b6000602082019050610fa46000830184610f80565b92915050565b60008060008060608587031215610fc457610fc3610dbd565b5b6000610fd287828801610e10565b9450506020610fe387828801610e46565b935050604085013567ffffffffffffffff81111561100457611003610dc2565b5b61101087828801610e6a565b925092505092959194509250565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110628261101e565b915061106d8361101e565b925082820390508181111561108557611084611028565b5b92915050565b600080fd5b600080fd5b600080858511156110a9576110a861108b565b5b838611156110ba576110b9611090565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006110f483836110d0565b826110ff8135610e25565b9250602082101561113f5761113a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026110db565b831692505b505092915050565b600061115282610dc7565b9050919050565b61116281611147565b811461116d57600080fd5b50565b60008135905061117f81611159565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111d38261118a565b810181811067ffffffffffffffff821117156111f2576111f161119b565b5b80604052505050565b6000611205610db3565b905061121182826111ca565b919050565b600067ffffffffffffffff8211156112315761123061119b565b5b61123a8261118a565b9050602081019050919050565b82818337600083830152505050565b600061126961126484611216565b6111fb565b90508281526020810184848401111561128557611284611185565b5b611290848285611247565b509392505050565b600082601f8301126112ad576112ac610e5b565b5b81356112bd848260208601611256565b91505092915050565b6000806000606084860312156112df576112de610dbd565b5b60006112ed86828701611170565b935050602084013567ffffffffffffffff81111561130e5761130d610dc2565b5b61131a86828701611298565b925050604084013567ffffffffffffffff81111561133b5761133a610dc2565b5b61134786828701611298565b9150509250925092565b600081519050919050565b600081905092915050565b60005b8381101561138557808201518184015260208101905061136a565b60008484015250505050565b600061139c82611351565b6113a6818561135c565b93506113b6818560208601611367565b80840191505092915050565b60006113ce8284611391565b915081905092915050565b600082825260208201905092915050565b60006113f582611351565b6113ff81856113d9565b935061140f818560208601611367565b6114188161118a565b840191505092915050565b6000602082019050818103600083015261143d81846113ea565b905092915050565b61144e81610e25565b82525050565b60006040820190506114696000830185611445565b818103602083015261147b81846113ea565b90509392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114b981611484565b81146114c457600080fd5b50565b6000815190506114d6816114b0565b92915050565b6000602082840312156114f2576114f1610dbd565b5b6000611500848285016114c7565b91505092915050565b600082825260208201905092915050565b7f5369676e617475726556616c696461746f72237265636f7665725369676e657260008201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000602082015250565b6000611576603a83611509565b91506115818261151a565b604082019050919050565b600060208201905081810360008301526115a581611569565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5369676e617475726556616c696461746f723a20696e76616c6964207369676e60008201527f617475726520762076616c756500000000000000000000000000000000000000602082015250565b6000611637602d83611509565b9150611642826115db565b604082019050919050565b600060208201905081810360008301526116668161162a565b9050919050565b600060ff82169050919050565b6116838161166d565b82525050565b600060808201905061169e6000830187611445565b6116ab602083018661167a565b6116b86040830185611445565b6116c56060830184611445565b95945050505050565b6116d781610de7565b82525050565b60006116e983856113d9565b93506116f6838584611247565b6116ff8361118a565b840190509392505050565b600060808201905061171f60008301886116ce565b61172c6020830187611445565b818103604083015261173f8185876116dd565b905061174e6060830184610f80565b9695505050505050565b60008151905061176781610ecc565b92915050565b60006020828403121561178357611782610dbd565b5b600061179184828501611758565b9150509291505056fea264697066735822122062e852d6f3bc76440dcb2d124be014ffc33a8e4e47785240f80ba24f4de718be64736f6c63430008110033";

type UniversalSigValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalSigValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniversalSigValidator__factory extends ContractFactory {
  constructor(...args: UniversalSigValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniversalSigValidator> {
    return super.deploy(overrides || {}) as Promise<UniversalSigValidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniversalSigValidator {
    return super.attach(address) as UniversalSigValidator;
  }
  override connect(signer: Signer): UniversalSigValidator__factory {
    return super.connect(signer) as UniversalSigValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalSigValidatorInterface {
    return new utils.Interface(_abi) as UniversalSigValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniversalSigValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniversalSigValidator;
  }
}
