/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Whitelist,
  WhitelistInterface,
} from "../../../src/paymaster/Whitelist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "WhitelistInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114188061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101085780638da5cb5b14610112578063b092145e14610130578063b3154db014610160578063f2fde38b1461019057610093565b80630a3b0a4f1461009857806324efa264146100b457806329092d0e146100d05780636b845bfe146100ec575b600080fd5b6100b260048036038101906100ad9190610e3e565b6101ac565b005b6100ce60048036038101906100c99190610ed0565b610276565b005b6100ea60048036038101906100e59190610e3e565b610343565b005b61010660048036038101906101019190610ed0565b61040d565b005b6101106104da565b005b61011a6104ee565b6040516101279190610f2c565b60405180910390f35b61014a60048036038101906101459190610f47565b610517565b6040516101579190610fa2565b60405180910390f35b61017a60048036038101906101759190610f47565b610546565b6040516101879190610fa2565b60405180910390f35b6101aa60048036038101906101a59190610e3e565b610596565b005b6101c067052f2943829a786d60c01b610619565b6101d46766509ecc656e7d5260c01b610619565b6101e867f06cb9923df1f0f560c01b610619565b6101f18161061c565b610205676a54ad183275242c60c01b610619565b6102196736d8fa950f5f54d160c01b610619565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0060405160405180910390a350565b61028a67659b74c04dc60f0860c01b610619565b61029e676459c7789d59716660c01b610619565b6102b26709b7553e565b215660c01b610619565b6102bc8282610834565b6102d067c355ada895aed9e460c01b610619565b6102e467f3d60a66b867af6f60c01b610619565b81816040516102f492919061107a565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1360405160405180910390a35050565b61035767fb26f28eff9dcd2c60c01b610619565b61036b677009586d73066c8760c01b610619565b61037f67eb6c7fd6fba79cea60c01b610619565b610388816108ec565b61039c6738ad40d2bfaa915c60c01b610619565b6103b067523362c19c07045260c01b610619565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8860405160405180910390a350565b610421676fa3ce391dd36fb560c01b610619565b61043567cd6038d251ee34c360c01b610619565b6104496777b156c2a9f6f2b260c01b610619565b6104538282610b04565b610467677f82958e45980c9260c01b610619565b61047b67b57bd9993333d59460c01b610619565b818160405161048b92919061107a565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f360405160405180910390a35050565b6104e2610bbc565b6104ec6000610c3a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600061055c67928f2b1f842739f560c01b610619565b610570678c0861c1ddc1733960c01b610619565b6105846702d5ae05146de65c60c01b610619565b61058e8383610cfe565b905092915050565b61059e610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490611116565b60405180910390fd5b61061681610c3a565b50565b50565b61063067322f7a27fc36305260c01b610619565b61064467f7a120d0cbdd118460c01b610619565b610658674138b93f3ba435ff60c01b610619565b61066c6762bc5ad890be616c60c01b610619565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290611182565b60405180910390fd5b6106ef6721c4cf80160a82ec60c01b610619565b610703671e5adae7a4a8558b60c01b610619565b61071767e7f1c6a8f1e4c3ed60c01b610619565b61072b67c4a2cc92f110203660c01b610619565b6107353382610cfe565b15610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90611214565b60405180910390fd5b61078967ca30658d056b2eab60c01b610619565b61079d67244a857adf37c26a60c01b610619565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6108486779b2a7dd60756cf560c01b610619565b61085c67fb4c4306d9d5a23d60c01b610619565b61087067bc6562e4ea66024860c01b610619565b60005b828290508110156108e75761089267a41b50111c20634c60c01b610619565b6108a6676d9181408ef0d58b60c01b610619565b6108d68383838181106108bc576108bb611234565b5b90506020020160208101906108d19190610e3e565b61061c565b806108e09061129c565b9050610873565b505050565b61090067a8445e6041fe9d3b60c01b610619565b610914673e2cee71d314541a60c01b610619565b610928670abe529f6b585cf460c01b610619565b61093c6768f882ab7b65fccd60c01b610619565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a290611182565b60405180910390fd5b6109bf67ef0bfe4d0b81e8bd60c01b610619565b6109d36733f3cccd58c1f87560c01b610619565b6109e767e948ace7ba7559d760c01b610619565b6109fb67d455a28b74727fe460c01b610619565b610a053382610cfe565b610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90611356565b60405180910390fd5b610a5867e214a010f614197d60c01b610619565b610a6c6726f191f0e229d00160c01b610619565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610b1867302392aa25f3189360c01b610619565b610b2c67b38e22a3e2aa5caf60c01b610619565b610b406704fc492877d1189e60c01b610619565b60005b82829050811015610bb757610b62678f06168095c9138060c01b610619565b610b7667aaff3dd3879d91f060c01b610619565b610ba6838383818110610b8c57610b8b611234565b5b9050602002016020810190610ba19190610e3e565b6108ec565b80610bb09061129c565b9050610b43565b505050565b610bc4610dce565b73ffffffffffffffffffffffffffffffffffffffff16610be26104ee565b73ffffffffffffffffffffffffffffffffffffffff1614610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f906113c2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d1467ff47c57054d4377b60c01b610619565b610d2867aee4949771bd9cac60c01b610619565b610d3c67be52a1e9fea92a0360c01b610619565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0b82610de0565b9050919050565b610e1b81610e00565b8114610e2657600080fd5b50565b600081359050610e3881610e12565b92915050565b600060208284031215610e5457610e53610dd6565b5b6000610e6284828501610e29565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e9057610e8f610e6b565b5b8235905067ffffffffffffffff811115610ead57610eac610e70565b5b602083019150836020820283011115610ec957610ec8610e75565b5b9250929050565b60008060208385031215610ee757610ee6610dd6565b5b600083013567ffffffffffffffff811115610f0557610f04610ddb565b5b610f1185828601610e7a565b92509250509250929050565b610f2681610e00565b82525050565b6000602082019050610f416000830184610f1d565b92915050565b60008060408385031215610f5e57610f5d610dd6565b5b6000610f6c85828601610e29565b9250506020610f7d85828601610e29565b9150509250929050565b60008115159050919050565b610f9c81610f87565b82525050565b6000602082019050610fb76000830184610f93565b92915050565b600081905092915050565b6000819050919050565b610fdb81610e00565b82525050565b6000610fed8383610fd2565b60208301905092915050565b60006110086020840184610e29565b905092915050565b6000602082019050919050565b60006110298385610fbd565b935061103482610fc8565b8060005b8581101561106d5761104a8284610ff9565b6110548882610fe1565b975061105f83611010565b925050600181019050611038565b5085925050509392505050565b600061108782848661101d565b91508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611100602683611093565b915061110b826110a4565b604082019050919050565b6000602082019050818103600083015261112f816110f3565b9050919050565b7f57686974656c6973743a3a205a65726f20616464726573730000000000000000600082015250565b600061116c601883611093565b915061117782611136565b602082019050919050565b6000602082019050818103600083015261119b8161115f565b9050919050565b7f57686974656c6973743a3a204163636f756e7420697320616c7265616479207760008201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b60006111fe602a83611093565b9150611209826111a2565b604082019050919050565b6000602082019050818103600083015261122d816111f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006112a782611292565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d9576112d8611263565b5b600182019050919050565b7f57686974656c6973743a3a204163636f756e74206973206e6f7420776869746560008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000611340602683611093565b915061134b826112e4565b604082019050919050565b6000602082019050818103600083015261136f81611333565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113ac602083611093565b91506113b782611376565b602082019050919050565b600060208201905081810360008301526113db8161139f565b905091905056fea2646970667358221220cc1597c956d683b0176190baba9817ae3a0eba40eeefd52bc150f501da1404ce64736f6c63430008110033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
