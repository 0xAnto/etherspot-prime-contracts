/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../src/samples/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sigTimeRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200276338038062002763833981810160405281019062000037919062000431565b81620000586200004c6200013260201b60201c565b6200013a60201b60201c565b6200007467d9ad280a158e404360c01b620001fe60201b60201c565b62000090678455c7400e3a5f4760c01b620001fe60201b60201c565b620000ac6775e4cf881b68e50e60c01b620001fe60201b60201c565b620000bd816200020160201b60201c565b50620000da6721f568fc6d83cfe460c01b620002c560201b60201c565b620000f667a6b56b479788199260c01b620002c560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620004fb565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6200021d67c1d662b86c9c3f2c60c01b620001fe60201b60201c565b6200022d620002c860201b60201c565b6200024967d735540c3a6ff2d460c01b620001fe60201b60201c565b6200026567850f91523560c17460c01b620001fe60201b60201c565b6200028167cfcc64f9dd3bc74260c01b620001fe60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50565b620002d86200013260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002fe6200035960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000357576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034e90620004d9565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003b48262000387565b9050919050565b6000620003c882620003a7565b9050919050565b620003da81620003bb565b8114620003e657600080fd5b50565b600081519050620003fa81620003cf565b92915050565b6200040b81620003a7565b81146200041757600080fd5b50565b6000815190506200042b8162000400565b92915050565b600080604083850312156200044b576200044a62000382565b5b60006200045b85828601620003e9565b92505060206200046e858286016200041a565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620004c160208362000478565b9150620004ce8262000489565b602082019050919050565b60006020820190508181036000830152620004f481620004b2565b9050919050565b6080516122456200051e600039600081816105330152610e3701526122456000f3fe6080604052600436106100e85760003560e01c8063b0d691fe1161008a578063c399ec8811610059578063c399ec8814610299578063d0e30db0146102c4578063f2fde38b146102ce578063f465c77e146102f7576100e8565b8063b0d691fe146101f1578063bb9fe6bf1461021c578063c23a5cea14610233578063c266f2921461025c576100e8565b8063584465f2116100c6578063584465f21461015d578063715018a6146101865780638da5cb5b1461019d578063a9a23409146101c8576100e8565b80630396cb60146100ed578063205c28781461010957806323d9ac9b14610132575b600080fd5b61010760048036038101906101029190611542565b610335565b005b34801561011557600080fd5b50610130600480360381019061012b9190611603565b610432565b005b34801561013e57600080fd5b50610147610531565b6040516101549190611664565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f91906116bd565b610555565b005b34801561019257600080fd5b5061019b6105f1565b005b3480156101a957600080fd5b506101b2610605565b6040516101bf9190611664565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190611774565b61062e565b005b3480156101fd57600080fd5b506102066106ac565b6040516102139190611847565b60405180910390f35b34801561022857600080fd5b506102316106d2565b005b34801561023f57600080fd5b5061025a60048036038101906102559190611862565b6107c2565b005b34801561026857600080fd5b50610283600480360381019061027e91906118b4565b6108be565b6040516102909190611916565b60405180910390f35b3480156102a557600080fd5b506102ae6109a5565b6040516102bb9190611940565b60405180910390f35b6102cc610a84565b005b3480156102da57600080fd5b506102f560048036038101906102f09190611987565b610b50565b005b34801561030357600080fd5b5061031e600480360381019061031991906119e0565b610bd4565b60405161032c929190611ae8565b60405180910390f35b610349671bfe4ab6255425db60c01b610f2d565b610351610f30565b610365677c2ab3e920f66fc460c01b610f2d565b6103796741f0617f9794d16860c01b610f2d565b61038d67790e549db14df0c260c01b610f2d565b6103a167ce0737df6b9e42bb60c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103fd9190611b27565b6000604051808303818588803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b505050505050565b61044667248e1217f06c3ec760c01b610f2d565b61044e610f30565b61046267bd46dac5acb652c960c01b610f2d565b610476674342d23de7a3ed5a60c01b610f2d565b61048a67cc9569cc5fe68f9d60c01b610f2d565b61049e67b6f029ee77278ef160c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b81526004016104fb929190611b51565b600060405180830381600087803b15801561051557600080fd5b505af1158015610529573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61056967c1d662b86c9c3f2c60c01b610f2d565b610571610f30565b61058567d735540c3a6ff2d460c01b610f2d565b61059967850f91523560c17460c01b610f2d565b6105ad67cfcc64f9dd3bc74260c01b610f2d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105f9610f30565b6106036000610fae565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106426720fb2285cc651da660c01b610f2d565b61065667df35162198eda5c560c01b610f2d565b61066a67124d5c09ea14919f60c01b610f2d565b610672611072565b610686671367f038146a276b60c01b610f2d565b61069a67117ee8376efb738560c01b610f2d565b6106a684848484611132565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106e667b4546b7724f6165660c01b610f2d565b6106ee610f30565b61070267d9795aa80b30318760c01b610f2d565b61071667bfe322990a47bc0760c01b610f2d565b61072a67874d39101d99253960c01b610f2d565b61073e67b423ba4701a0393460c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107a857600080fd5b505af11580156107bc573d6000803e3d6000fd5b50505050565b6107d667fabaeff5902c6f7c60c01b610f2d565b6107de610f30565b6107f2672d0a0409d65c3d8e60c01b610f2d565b61080667f97794d1bddfa2e060c01b610f2d565b61081a674312e8c459c73fef60c01b610f2d565b61082e673464294413aed7d760c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016108899190611b7a565b600060405180830381600087803b1580156108a357600080fd5b505af11580156108b7573d6000803e3d6000fd5b5050505050565b60006108d4678a2aec65ee30076360c01b611160565b6108e867a4950a22b953354e60c01b611160565b6108fc6749773ba001ee091660c01b611160565b61090582611163565b826020013583806040019061091a9190611ba4565b604051610928929190611c46565b60405180910390208480606001906109409190611ba4565b60405161094e929190611c46565b604051809103902085608001358660a001358760c001358860e0013589610100013560405160200161098899989796959493929190611c5f565b604051602081830303815290604052805190602001209050919050565b60006109bb67f8256bc3292ec2f860c01b610f2d565b6109cf674659961ee68435b060c01b610f2d565b6109e36725709d707ada999460c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a3e9190611664565b602060405180830381865afa158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f9190611d01565b905090565b610a9867fa008f0a2a61337260c01b610f2d565b610aac670e56d1bb5ea9d80c60c01b610f2d565b610ac0674e2d9df39913ac2060c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610b1c9190611664565b6000604051808303818588803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b5050505050565b610b58610f30565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf90611db1565b60405180910390fd5b610bd181610fae565b50565b60606000610bec679088d6efde62958e60c01b611160565b610c00673b1c356d528a449b60c01b611160565b610c1467f49ba57cf3db639b60c01b611160565b610c2867158a75829283969260c01b611160565b6000610c33866108be565b9050610c496775512f602389719b60c01b611160565b610c5d672ff181c39b24cb7260c01b611160565b36600087806101200190610c719190611ba4565b91509150610c8967739f79a7be0b0c9660c01b611160565b610c9d67cbf11b58787572cc60c01b611160565b6000601483839050610caf9190611e00565b9050610cc567956686738e40f17660c01b611160565b610cd96783d43e6020edc30860c01b611160565b610ced673bdfb3e72f4bd70760c01b611160565b604081148015610d0d5750610d0c67692a656b8ccce00060c01b6111ec565b5b80610d345750604181148015610d335750610d3267c3909141ad19f2c860c01b6111ec565b5b5b610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90611ea6565b60405180910390fd5b610d8767b9dc8d49929b86be60c01b611160565b610d9b670d019df27f2f24e060c01b611160565b610daf67b707d7ee6e35ccaa60c01b611160565b610e1f83836014908092610dc593929190611ed0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610e11866111f7565b61122790919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610ecd57610e8567083c56a14e5085ba60c01b611160565b610e9967f19186da8d7c282b60c01b611160565b610ead674d24c0bda471568160c01b611160565b600160405180602001604052806000815250909550955050505050610f25565b610ee167e75fe6263751910960c01b611160565b610ef567b89b9acd01acb43a60c01b611160565b610f0967015562c35a600bde60c01b611160565b6000604051806020016040528060008152509095509550505050505b935093915050565b50565b610f3861124e565b73ffffffffffffffffffffffffffffffffffffffff16610f56610605565b73ffffffffffffffffffffffffffffffffffffffff1614610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa390611f57565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611086679bc326c49484188460c01b610f2d565b61109a6724b5ec39eafd38f560c01b610f2d565b6110ae673113ee9c61faced260c01b610f2d565b6110c2678b7ae48ea5ddd2cb60c01b610f2d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111c57600080fd5b61113067e77cb1e4072ac22860c01b610f2d565b565b6111466797f87360883c20c560c01b610f2d565b61115a67314d1d68847cc6ee60c01b610f2d565b50505050565b50565b600061117967dbf9b12ee714ceca60c01b611256565b61118d6744f6f9dab51ee7b360c01b611256565b6111a167d23af00690725a7460c01b611256565b60006111b7675d16aa0ffc9fd9eb60c01b611256565b823590506111cf677d00aa2e04448d3160c01b611256565b6111e367acf533125296169960c01b611256565b80915050919050565b600060019050919050565b60008160405160200161120a9190611fef565b604051602081830303815290604052805190602001209050919050565b60008060006112368585611259565b91509150611243816112ab565b819250505092915050565b600033905090565b50565b60008060418351141561129b5760008060006020860151925060408601519150606086015160001a905061128f87828585611419565b945094505050506112a4565b60006002915091505b9250929050565b600060048111156112bf576112be612015565b5b8160048111156112d2576112d1612015565b5b14156112dd57611416565b600160048111156112f1576112f0612015565b5b81600481111561130457611303612015565b5b1415611345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133c90612090565b60405180910390fd5b6002600481111561135957611358612015565b5b81600481111561136c5761136b612015565b5b14156113ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a4906120fc565b60405180910390fd5b600360048111156113c1576113c0612015565b5b8160048111156113d4576113d3612015565b5b1415611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c9061218e565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156114545760006003915091506114f3565b60006001878787876040516000815260200160405260405161147994939291906121ca565b6020604051602081039080840390855afa15801561149b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114ea576000600192509250506114f3565b80600092509250505b94509492505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b61151f81611506565b811461152a57600080fd5b50565b60008135905061153c81611516565b92915050565b600060208284031215611558576115576114fc565b5b60006115668482850161152d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061159a8261156f565b9050919050565b6115aa8161158f565b81146115b557600080fd5b50565b6000813590506115c7816115a1565b92915050565b6000819050919050565b6115e0816115cd565b81146115eb57600080fd5b50565b6000813590506115fd816115d7565b92915050565b6000806040838503121561161a576116196114fc565b5b6000611628858286016115b8565b9250506020611639858286016115ee565b9150509250929050565b600061164e8261156f565b9050919050565b61165e81611643565b82525050565b60006020820190506116796000830184611655565b92915050565b600061168a82611643565b9050919050565b61169a8161167f565b81146116a557600080fd5b50565b6000813590506116b781611691565b92915050565b6000602082840312156116d3576116d26114fc565b5b60006116e1848285016116a8565b91505092915050565b600381106116f757600080fd5b50565b600081359050611709816116ea565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126117345761173361170f565b5b8235905067ffffffffffffffff81111561175157611750611714565b5b60208301915083600182028301111561176d5761176c611719565b5b9250929050565b6000806000806060858703121561178e5761178d6114fc565b5b600061179c878288016116fa565b945050602085013567ffffffffffffffff8111156117bd576117bc611501565b5b6117c98782880161171e565b935093505060406117dc878288016115ee565b91505092959194509250565b6000819050919050565b600061180d6118086118038461156f565b6117e8565b61156f565b9050919050565b600061181f826117f2565b9050919050565b600061183182611814565b9050919050565b61184181611826565b82525050565b600060208201905061185c6000830184611838565b92915050565b600060208284031215611878576118776114fc565b5b6000611886848285016115b8565b91505092915050565b600080fd5b600061016082840312156118ab576118aa61188f565b5b81905092915050565b6000602082840312156118ca576118c96114fc565b5b600082013567ffffffffffffffff8111156118e8576118e7611501565b5b6118f484828501611894565b91505092915050565b6000819050919050565b611910816118fd565b82525050565b600060208201905061192b6000830184611907565b92915050565b61193a816115cd565b82525050565b60006020820190506119556000830184611931565b92915050565b61196481611643565b811461196f57600080fd5b50565b6000813590506119818161195b565b92915050565b60006020828403121561199d5761199c6114fc565b5b60006119ab84828501611972565b91505092915050565b6119bd816118fd565b81146119c857600080fd5b50565b6000813590506119da816119b4565b92915050565b6000806000606084860312156119f9576119f86114fc565b5b600084013567ffffffffffffffff811115611a1757611a16611501565b5b611a2386828701611894565b9350506020611a34868287016119cb565b9250506040611a45868287016115ee565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a89578082015181840152602081019050611a6e565b83811115611a98576000848401525b50505050565b6000601f19601f8301169050919050565b6000611aba82611a4f565b611ac48185611a5a565b9350611ad4818560208601611a6b565b611add81611a9e565b840191505092915050565b60006040820190508181036000830152611b028185611aaf565b9050611b116020830184611931565b9392505050565b611b2181611506565b82525050565b6000602082019050611b3c6000830184611b18565b92915050565b611b4b8161158f565b82525050565b6000604082019050611b666000830185611b42565b611b736020830184611931565b9392505050565b6000602082019050611b8f6000830184611b42565b92915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611bc157611bc0611b95565b5b80840192508235915067ffffffffffffffff821115611be357611be2611b9a565b5b602083019250600182023603831315611bff57611bfe611b9f565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000611c2d8385611c07565b9350611c3a838584611c12565b82840190509392505050565b6000611c53828486611c21565b91508190509392505050565b600061012082019050611c75600083018c611655565b611c82602083018b611931565b611c8f604083018a611907565b611c9c6060830189611907565b611ca96080830188611931565b611cb660a0830187611931565b611cc360c0830186611931565b611cd060e0830185611931565b611cde610100830184611931565b9a9950505050505050505050565b600081519050611cfb816115d7565b92915050565b600060208284031215611d1757611d166114fc565b5b6000611d2584828501611cec565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611d9b602683611d2e565b9150611da682611d3f565b604082019050919050565b60006020820190508181036000830152611dca81611d8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e0b826115cd565b9150611e16836115cd565b925082821015611e2957611e28611dd1565b5b828203905092915050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611e90604083611d2e565b9150611e9b82611e34565b604082019050919050565b60006020820190508181036000830152611ebf81611e83565b9050919050565b600080fd5b600080fd5b60008085851115611ee457611ee3611ec6565b5b83861115611ef557611ef4611ecb565b5b6001850283019150848603905094509492505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611f41602083611d2e565b9150611f4c82611f0b565b602082019050919050565b60006020820190508181036000830152611f7081611f34565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000611fb8601c83611f77565b9150611fc382611f82565b601c82019050919050565b6000819050919050565b611fe9611fe4826118fd565b611fce565b82525050565b6000611ffa82611fab565b91506120068284611fd8565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061207a601883611d2e565b915061208582612044565b602082019050919050565b600060208201905081810360008301526120a98161206d565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006120e6601f83611d2e565b91506120f1826120b0565b602082019050919050565b60006020820190508181036000830152612115816120d9565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000612178602283611d2e565b91506121838261211c565b604082019050919050565b600060208201905081810360008301526121a78161216b565b9050919050565b600060ff82169050919050565b6121c4816121ae565b82525050565b60006080820190506121df6000830187611907565b6121ec60208301866121bb565b6121f96040830185611907565b6122066060830184611907565b9594505050505056fea2646970667358221220bcdd6492fd9becc8976c5645e846d15f3df5d8bc8dc284b42e63208712ea1f8564736f6c634300080c0033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
