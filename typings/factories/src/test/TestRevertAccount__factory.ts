/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestRevertAccount,
  TestRevertAccountInterface,
} from "../../../src/test/TestRevertAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_ep",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "revertLong",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "sigTimeRange",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405161053b38038061053b83398181016040528101906100259190610117565b61003f675144f623c63fda7b60c01b61009f60201b60201c565b61005967e1c6a5e6f2a40fe160c01b61009f60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610144565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d2826100a7565b9050919050565b60006100e4826100c7565b9050919050565b6100f4816100d9565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b60006020828403121561012d5761012c6100a2565b5b600061013b84828501610102565b91505092915050565b6103e8806101536000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630825d1fc1461003b578063be76c6ef1461006b575b600080fd5b610055600480360381019061005091906102ae565b610087565b6040516100629190610340565b60405180910390f35b6100856004803603810190610080919061035b565b610185565b005b600061009d67afc9d5de723ba79560c01b6101b2565b6100b167065e9661ecc9262960c01b6101b2565b6100c567a8ea201a31ed5e8660c01b6101b2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf983306040518363ffffffff1660e01b815260040161011f9190610397565b6000604051808303818588803b15801561013857600080fd5b505af115801561014c573d6000803e3d6000fd5b5050505050610165675efb554c7992298f60c01b6101b2565b61017967c1362ecb429743fc60c01b6101b2565b60009050949350505050565b61019967c9732ccf2bf5c01560c01b6101b2565b6101ad67ddbe52d2b25f860f60c01b6101b2565b806000fd5b50565b600080fd5b600080fd5b600080fd5b600061016082840312156101db576101da6101bf565b5b81905092915050565b6000819050919050565b6101f7816101e4565b811461020257600080fd5b50565b600081359050610214816101ee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102458261021a565b9050919050565b6102558161023a565b811461026057600080fd5b50565b6000813590506102728161024c565b92915050565b6000819050919050565b61028b81610278565b811461029657600080fd5b50565b6000813590506102a881610282565b92915050565b600080600080608085870312156102c8576102c76101b5565b5b600085013567ffffffffffffffff8111156102e6576102e56101ba565b5b6102f2878288016101c4565b945050602061030387828801610205565b935050604061031487828801610263565b925050606061032587828801610299565b91505092959194509250565b61033a81610278565b82525050565b60006020820190506103556000830184610331565b92915050565b600060208284031215610371576103706101b5565b5b600061037f84828501610299565b91505092915050565b6103918161023a565b82525050565b60006020820190506103ac6000830184610388565b9291505056fea2646970667358221220ec72860f4c8a0cd967d25d835d42c6bc396e6a7c1b5836fe88fc04eabf009c4864736f6c634300080c0033";

type TestRevertAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRevertAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRevertAccount__factory extends ContractFactory {
  constructor(...args: TestRevertAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ep: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TestRevertAccount> {
    return super.deploy(_ep, overrides || {}) as Promise<TestRevertAccount>;
  }
  override getDeployTransaction(
    _ep: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ep, overrides || {});
  }
  override attach(address: string): TestRevertAccount {
    return super.attach(address) as TestRevertAccount;
  }
  override connect(signer: Signer): TestRevertAccount__factory {
    return super.connect(signer) as TestRevertAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRevertAccountInterface {
    return new utils.Interface(_abi) as TestRevertAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRevertAccount {
    return new Contract(address, _abi, signerOrProvider) as TestRevertAccount;
  }
}
